<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2017.2.1 (Build 801)" ts="2020-03-26 15:50:35">
<Class name="s01.Controller.Procedimento">
<Super>%RegisteredObject</Super>
<TimeChanged>65464,54509.508601</TimeChanged>
<TimeCreated>65442,41502.179563</TimeCreated>

<Property name="ProcedimentoService">
<Type>s01.Service.Procedimento</Type>
<Private>1</Private>
</Property>

<Method name="Cadastrar">
<FormalSpec>pProcedimentoDto</FormalSpec>
<Implementation><![CDATA[
 	Do ..ProcedimentoService.VerificaSetor(pProcedimentoDto.idSetor)
  	Return ..ProcedimentoService.Cadastrar(pProcedimentoDto)
]]></Implementation>
</Method>

<Method name="Consultar">
<FormalSpec>pId</FormalSpec>
<ReturnType>s01.DTO.Procedimento</ReturnType>
<Implementation><![CDATA[	Return ..ProcedimentoService.Consultar(pId)
]]></Implementation>
</Method>

<Method name="Inativar">
<FormalSpec>pId</FormalSpec>
<Implementation><![CDATA[	Do ..ProcedimentoService.Inativar(pId)
]]></Implementation>
</Method>

<Method name="ListarTodos">
<ReturnType>%Library.ListOfObjects</ReturnType>
<Implementation><![CDATA[
	Set listaDeProcedimentos = ##class(%Library.ListOfObjects).%New()
	Set listaDeProcedimentos = ..ProcedimentoService.ListarTodos()
	
	Return listaDeProcedimentos
]]></Implementation>
</Method>
</Class>


<Class name="s01.Controller.Setor">
<Super>%RegisteredObject</Super>
<TimeChanged>65464,56038.087778</TimeChanged>
<TimeCreated>65442,41502.282956</TimeCreated>

<Property name="SetorService">
<Type>s01.Service.Setor</Type>
<Private>1</Private>
</Property>

<Method name="Salvar">
<FormalSpec>pSetorDto:s01.DTO.Setor</FormalSpec>
<Implementation><![CDATA[	 Do ..SetorService.Salvar(pSetorDto)
]]></Implementation>
</Method>

<Method name="Consultar">
<FormalSpec>pId:%Integer</FormalSpec>
<ReturnType>s01.DTO.Setor</ReturnType>
<Implementation><![CDATA[	Return ..SetorService.Consultar(pId)
]]></Implementation>
</Method>

<Method name="Inativar">
<FormalSpec>pId:%Integer</FormalSpec>
<Implementation><![CDATA[	Do ..SetorService.Inativar(pId)
]]></Implementation>
</Method>

<Method name="ListarTodos">
<ReturnType>%Library.ListOfObjects</ReturnType>
<Implementation><![CDATA[
	Set listaDeSetores = ##class(%Library.ListOfDataTypes).%New()
	Set listaDeSetores = ..SetorService.ListarTodos()
	Return listaDeSetores
]]></Implementation>
</Method>

<Method name="ExisteSetor">
<FormalSpec>pId</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	Return ..SetorService.ExisteSetor(pId)
]]></Implementation>
</Method>
</Class>


<Class name="s01.DAO.Procedimento">
<Super>%RegisteredObject</Super>
<TimeChanged>65464,40678.161902</TimeChanged>
<TimeCreated>65442,41502.496047</TimeCreated>

<Method name="Cadastrar">
<FormalSpec>pProcedimentoDto</FormalSpec>
<Implementation><![CDATA[
 	Set procedimentoPersistencia = ##class(s01.Persistencia.Procedimento).%New()
 	Set procedimentoPersistencia.Descricao = pProcedimentoDto.Descricao
 	Set procedimentoPersistencia.Mnemonico = pProcedimentoDto.Mnemonico
 	Set procedimentoPersistencia.Preco = pProcedimentoDto.Preco
 	Do procedimentoPersistencia.SetorSetObjectId(pProcedimentoDto.idSetor)
 	Set procedimentoPersistencia.Status = pProcedimentoDto.Status
 	
 	Return procedimentoPersistencia.%Save()
]]></Implementation>
</Method>

<Method name="Consultar">
<FormalSpec>pId</FormalSpec>
<ReturnType>s01.DTO.Procedimento</ReturnType>
<Implementation><![CDATA[
	Set procedimentoPersistencia = ##class(s01.Persistencia.Procedimento).%OpenId(pId)
	Set procedimentoDto = ##class(s01.DTO.Procedimento).%New()
	Set procedimentoDto.Descricao = procedimentoPersistencia.Descricao
	Set procedimentoDto.Mnemonico = procedimentoPersistencia.Mnemonico
	Set procedimentoDto.Preco = procedimentoPersistencia.Preco
	Set procedimentoDto.Setor = procedimentoPersistencia.Setor
	Set procedimentoDto.Status = procedimentoPersistencia.Status
	
	Return procedimentoDto
]]></Implementation>
</Method>

<Method name="Inativar">
<FormalSpec>pId</FormalSpec>
<Implementation><![CDATA[
	Set procedimentoPersistencia = ##class(s01.Persistencia.Procedimento).%OpenId(pId)
	Set procedimentoPersistencia.Status = "Inativo"
	Do procedimentoPersistencia.%Save()
	Kill procedimentoPersistencia
]]></Implementation>
</Method>

<Method name="ListarTodos">
<ReturnType>%Library.ListOfObjects</ReturnType>
<Implementation><![CDATA[
	Set consultaSql = ##class(%ResultSet).%New()
	Set listaDeProcedimentos = ##class(%Library.ListOfObjects).%New()
	Do consultaSql.Prepare("SELECT ID FROM s01_Persistencia.Procedimento")
	Do consultaSql.Execute()
	While (consultaSql.Next()){
		Set idProcedimento = consultaSql.Get("ID")
		Set procedimentoPersistencia = ##class(s01.Persistencia.Procedimento).%OpenId(idProcedimento)
		Set procedimentoDto = ##class(s01.DTO.Procedimento).%New()
		Set procedimentoDto.Descricao = procedimentoPersistencia.Descricao
		Set procedimentoDto.Mnemonico = procedimentoPersistencia.Mnemonico
		Set procedimentoDto.Preco = procedimentoPersistencia.Preco
		Set procedimentoDto.Setor = procedimentoPersistencia.Setor
		Set procedimentoDto.Status = procedimentoPersistencia.Status
		Do listaDeProcedimentos.Insert(procedimentoDto)
	}
	
	Return listaDeProcedimentos
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
/*
Method ExistsId(pId As %Integer) As %Boolean
{
	Return ##class(s01.Persistencia.Procedimento).%ExistsId(pId)
}
*/
]]></Content>
</UDLText>
</Class>


<Class name="s01.DAO.Setor">
<Super>%RegisteredObject</Super>
<TimeChanged>65464,53097.50854</TimeChanged>
<TimeCreated>65442,41502.592621</TimeCreated>

<Method name="Salvar">
<FormalSpec>pSetorDto:s01.DTO.Setor</FormalSpec>
<Implementation><![CDATA[
	Set setorPersistencia = ##class(s01.Persistencia.Setor).%OpenId(pSetorDto.Id)
 	Set:('$ISOBJECT(setorPersistencia)) setorPersistencia = ##class(s01.Persistencia.Setor).%New()
 	Set setorPersistencia.Descricao = pSetorDto.Descricao
 	Set setorPersistencia.Status = pSetorDto.Status
	$$$THROWONERROR(st, setorPersistencia.%Save())
	;Return setorPersistencia.%Id()
]]></Implementation>
</Method>

<Method name="Consultar">
<FormalSpec>pId:%Integer</FormalSpec>
<ReturnType>s01.DTO.Setor</ReturnType>
<Implementation><![CDATA[
	Set setorPersistencia = ##class(s01.Persistencia.Setor).%OpenId(pId)
 	Return:('$ISOBJECT(setorPersistencia)) ""
	Set setorDto = ##class(s01.DTO.Setor).%New()
 	Set setorDto.Descricao = setorPersistencia.Descricao
 	Set setorDto.Status = setorPersistencia.Status
 	Return setorDto
]]></Implementation>
</Method>

<Method name="ExisteSetor">
<FormalSpec>pId</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Return:(##class(s01.Persistencia.Setor).%ExistsId(pId)) 1
	Return 0
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// Method Cadastrar(setorDto)

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// {

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Set setorPersistencia = ##class(s01.Persistencia.Setor).%New()

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Set setorPersistencia.Descricao = setorDto.Descricao

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Set setorPersistencia.Status = setorDto.Status

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	$$$THROWONERROR(st, setorPersistencia.%Save())

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// }

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// Method Consultar(id) As s01.DTO.Setor

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// {

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Set setorPersistencia = ##class(s01.Persistencia.Setor).%OpenId(id)

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Return:('$ISOBJECT(setorPersistencia)) ""

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Set setorDto = ##class(s01.DTO.Setor).%New()

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Set setorDto.Descricao = setorPersistencia.Descricao

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Set setorDto.Status = setorPersistencia.Status

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Return setorDto

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// }

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// Method Inativar(pId As %Integer)

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// {

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Set setorPersistencia = ##class(s01.Persistencia.Setor).%OpenId(pId)

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Set setorPersistencia.Status = "Inativo"

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 	Do setorPersistencia.%Save()

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// }

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// 

]]></Content>
</UDLText>

<Method name="ListarTodos">
<ReturnType>%Library.ListOfObjects</ReturnType>
<Implementation><![CDATA[
 	Set listaDeSetores = ##class(%ListOfDataTypes).%New()
 	Set consultaSql = ##class(%ResultSet).%New()
 	Do consultaSql.Prepare("SELECT ID FROM s01_Persistencia.Setor")
 	Do consultaSql.Execute()
 	While (consultaSql.Next()){
 		Set idSetor = consultaSql.Get("ID")
 		Set setorPersistencia = ##class(s01.Persistencia.Setor).%OpenId(idSetor)
 		Set setorDto = ##class(s01.DTO.Setor).%New()
 		Set setorDto.Descricao = setorPersistencia.Descricao
 		Set setorDto.Status = setorPersistencia.Status
 		Do listaDeSetores.Insert(setorDto)
 	}
 	Return listaDeSetores
]]></Implementation>
</Method>
</Class>


<Class name="s01.DTO.Procedimento">
<Super>%RegisteredObject</Super>
<TimeChanged>65462,41423.940958</TimeChanged>
<TimeCreated>65442,41502.700189</TimeCreated>

<Property name="Id">
<Type>%Integer</Type>
</Property>

<Property name="Mnemonico">
<Type>%String</Type>
</Property>

<Property name="Descricao">
<Type>%String</Type>
</Property>

<Property name="Preco">
<Type>%Decimal</Type>
</Property>

<Property name="Setor">
<Type>%Integer</Type>
</Property>

<Property name="Status">
<Type>%String</Type>
</Property>
</Class>


<Class name="s01.DTO.Setor">
<Super>%RegisteredObject</Super>
<TimeChanged>65462,41183.132758</TimeChanged>
<TimeCreated>65442,41502.799127</TimeCreated>

<Property name="Id">
<Type>%Integer</Type>
</Property>

<Property name="Descricao">
<Type>%String</Type>
</Property>

<Property name="Status">
<Type>%String</Type>
</Property>
</Class>


<Class name="s01.Persistencia.Procedimento">
<Super>%Persistent,%Populate</Super>
<TimeChanged>65463,39054.446563</TimeChanged>
<TimeCreated>65451,34458.245698</TimeCreated>

<ForeignKey name="fkSetor">
<Properties>Setor</Properties>
<ReferencedClass>s01.Persistencia.Setor</ReferencedClass>
</ForeignKey>

<Property name="Mnemonico">
<Type>%String</Type>
</Property>

<Property name="Descricao">
<Type>%String</Type>
<Parameter name="MAXLEN" value="500"/>
</Property>

<Property name="Preco">
<Type>%Decimal</Type>
<Parameter name="MAXVAL" value="99.99"/>
<Parameter name="SCALE" value="2"/>
</Property>

<Property name="Setor">
<Type>s01.Persistencia.Setor</Type>
</Property>

<Property name="Status">
<Type>%String</Type>
<Parameter name="VALUELIST" value=",Ativo,Inativo"/>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^s01.Persistencia.ProcedimentoD</DataLocation>
<DefaultData>ProcedimentoDefaultData</DefaultData>
<IdLocation>^s01.Persistencia.ProcedimentoD</IdLocation>
<IndexLocation>^s01.Persistencia.ProcedimentoI</IndexLocation>
<StreamLocation>^s01.Persistencia.ProcedimentoS</StreamLocation>
<ExtentSize>20</ExtentSize>
<Data name="ProcedimentoDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Mnemonico</Value>
</Value>
<Value name="3">
<Value>Descricao</Value>
</Value>
<Value name="4">
<Value>Preco</Value>
</Value>
<Value name="5">
<Value>Setor</Value>
</Value>
<Value name="6">
<Value>Status</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>1.55</AverageFieldSize>
</Property>
<Property name="Descricao">
<Selectivity>5.0000%</Selectivity>
<AverageFieldSize>4.95</AverageFieldSize>
</Property>
<Property name="Mnemonico">
<Selectivity>5.0000%</Selectivity>
<AverageFieldSize>4.6</AverageFieldSize>
</Property>
<Property name="Preco">
<Selectivity>5.0000%</Selectivity>
<AverageFieldSize>4.8</AverageFieldSize>
</Property>
<Property name="Setor">
<Selectivity>7.1429%</Selectivity>
<AverageFieldSize>1.5</AverageFieldSize>
</Property>
<Property name="Status">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>6.3</AverageFieldSize>
</Property>
<SQLMap name="IDKEY">
<BlockCount>-4</BlockCount>
</SQLMap>
<SQLMap name="MnemonicoIndex">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="s01.Persistencia.Setor">
<Super>%Persistent,%Populate</Super>
<TimeChanged>65462,41264.863986</TimeChanged>
<TimeCreated>65451,34416.461123</TimeCreated>

<Property name="Descricao">
<Type>%String</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="Status">
<Type>%String</Type>
<Parameter name="VALUELIST" value=",Ativo,Inativo"/>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^s01.Persistencia.SetorD</DataLocation>
<DefaultData>SetorDefaultData</DefaultData>
<IdLocation>^s01.Persistencia.SetorD</IdLocation>
<IndexLocation>^s01.Persistencia.SetorI</IndexLocation>
<StreamLocation>^s01.Persistencia.SetorS</StreamLocation>
<ExtentSize>20</ExtentSize>
<Data name="SetorDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Descricao</Value>
</Value>
<Value name="3">
<Value>Status</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>1.55</AverageFieldSize>
</Property>
<Property name="Descricao">
<Selectivity>5.0000%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="Status">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>5.8</AverageFieldSize>
</Property>
<SQLMap name="IDKEY">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="s01.Service.Procedimento">
<Super>%RegisteredObject</Super>
<TimeChanged>65464,40527.312916</TimeChanged>
<TimeCreated>65442,41503.103007</TimeCreated>

<Method name="VerificaSetor">
<ClassMethod>1</ClassMethod>
<FormalSpec>pIdSetor</FormalSpec>
<Implementation><![CDATA[	Set setor = ##class(s01.Persistencia.Setor).%ExistsId(pIdSetor)
]]></Implementation>
</Method>

<Method name="Cadastrar">
<FormalSpec>pProcedimentoDto</FormalSpec>
<Implementation><![CDATA[
 	Set procedimentoDao = ##class(s01.DAO.Procedimento).%New() 
	Return procedimentoDao.Cadastrar(pProcedimentoDto)
]]></Implementation>
</Method>

<Method name="Consultar">
<FormalSpec>pId</FormalSpec>
<ReturnType>s01.DTO.Procedimento</ReturnType>
<Implementation><![CDATA[
	if (##class(s01.Persistencia.Procedimento).%ExistsId(pId)){
		Set procedimentoDao = ##class(s01.DAO.Procedimento).%New()
		Set procedimentoDto = ##class(s01.DTO.Procedimento).%New()
		Set procedimentoDto = procedimentoDao.Consultar(pId)
		Return procedimentoDto
	}
	Else{
		Return 0
	}
]]></Implementation>
</Method>

<Method name="Inativar">
<FormalSpec>pId</FormalSpec>
<Implementation><![CDATA[
	If (##class(s01.Persistencia.Procedimento).%ExistsId(pId)){
		Set procedimentoDao = ##class(s01.DAO.Procedimento).%New()
		Do procedimentoDao.Inativar(pId)
	}
	Else{
		Return 0
	}
]]></Implementation>
</Method>

<Method name="ListarTodos">
<ReturnType>%Library.ListOfObjects</ReturnType>
<Implementation><![CDATA[
	Set procedimentoDao = ##class(s01.DAO.Procedimento).%New()
	Set listaDeProcedimentos = ##class(%Library.ListOfObjects).%New()
	Set listaDeProcedimentos = procedimentoDao.ListarTodos()
	
	Return listaDeProcedimentos
]]></Implementation>
</Method>
</Class>


<Class name="s01.Service.Setor">
<Super>%RegisteredObject</Super>
<TimeChanged>65464,56039.070778</TimeChanged>
<TimeCreated>65442,41503.20529</TimeCreated>

<Property name="SetorDao">
<Type>s01.DAO.Setor</Type>
<Private>1</Private>
</Property>

<Method name="%OnNew">
<FormalSpec>pSetorDao:s01.DAO.Setor=##class(s01.DAO.Setor).%New()</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set ..SetorDao = pSetorDao
	Return $$$OK
]]></Implementation>
</Method>

<Method name="Salvar">
<FormalSpec>pSetorDto:s01.DTO.Setor</FormalSpec>
<Implementation><![CDATA[	Do ..SetorDao.Salvar(pSetorDto)
]]></Implementation>
</Method>

<Method name="Consultar">
<FormalSpec>pId:%Integer</FormalSpec>
<ReturnType>s01.DTO.Setor</ReturnType>
<Implementation><![CDATA[	Return ..SetorDao.Consultar(pId)
]]></Implementation>
</Method>

<Method name="Inativar">
<FormalSpec>pId:%Integer</FormalSpec>
<Implementation><![CDATA[
	Set setorDto = ..SetorDao.Consultar(pId)
	Set setorDto.Status = "Inativo"
	Do ..SetorDao.Salvar(setorDto)
]]></Implementation>
</Method>

<Method name="ListarTodos">
<ReturnType>%Library.ListOfObjects</ReturnType>
<Implementation><![CDATA[
	Set listaDeSetores = ##class(%Library.ListOfDataTypes).%New()
	Set listaDeSetores = ..SetorDao.ListarTodos()
	Return listaDeSetores
]]></Implementation>
</Method>

<Method name="ExisteSetor">
<FormalSpec>pId</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[	Return ..SetorDao.ExisteSetor(pId)
]]></Implementation>
</Method>
</Class>


<Class name="s01.View.Principal">
<Super>%RegisteredObject</Super>
<TimeChanged>65463,46164.356906</TimeChanged>
<TimeCreated>65450,40853.608963</TimeCreated>

<Method name="Menu">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Do{
		Read #!!, "	Você deseja ver opções para:", !,
		!, "	1. Procedimento",
		!, "	2. Setor",
		!!, "	0. Sair", !!, "	Digite a opção desejada: ", opcao
		Do ..TratarOpcao(opcao)
	} While(opcao '= 0)
]]></Implementation>
</Method>

<Method name="TratarOpcao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pOpcao</FormalSpec>
<Implementation><![CDATA[
	If (pOpcao = 1){
		Do ..MenuProcedimento()
	}
	
	ElseIf (pOpcao = 2){
		Do ..MenuSetor()
	}
	ElseIf (pOpcao = 0){
		Write #
	}
]]></Implementation>
</Method>

<Method name="MenuProcedimento">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Do ##class(s01.View.Procedimento).Menu()
]]></Implementation>
</Method>

<Method name="MenuSetor">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Do ##class(s01.View.Setor).Menu()
]]></Implementation>
</Method>

<Method name="ContinuarComEnter">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Read !!, "	Pressione Enter para voltar ao menu... ", controle
	Kill controle
]]></Implementation>
</Method>
</Class>


<Class name="s01.View.Procedimento">
<Super>%RegisteredObject</Super>
<TimeChanged>65464,54780.28925</TimeChanged>
<TimeCreated>65442,41503.305204</TimeCreated>

<Property name="ProcedimentoController">
<Type>s01.Controller.Procedimento</Type>
<Private>1</Private>
</Property>

<Method name="Menu">
<Implementation><![CDATA[
	Do{
		Read #!!, "	   ----Procedimento----",
		!!, "	Selecione uma das opções:",
		!!, "	1. Cadastrar",
		!, "	2. Consultar",
		!, "	3. Inativar",
		!, "	4. Listar Todos",
		!!, "	0. Sair", !!, "	Digite a opção desejada: ", opcao
		Do ..TratarOpcao(opcao)
	} While(opcao '= "0")
]]></Implementation>
</Method>

<Method name="TratarOpcao">
<FormalSpec>pOpcao</FormalSpec>
<Implementation><![CDATA[
	If (pOpcao = 1){
		Do ..Cadastrar()
	}
	
	ElseIf (pOpcao = 2){
		Do ..Consultar()
	}
	
	ElseIf (pOpcao = 3){
		Do ..Inativar()
	}
	
	ElseIf (pOpcao = 4){
		Do ..ListarTodos()
	}
	ElseIf (pOpcao = 0){
		Write #
	}
]]></Implementation>
</Method>

<Method name="Cadastrar">
<Implementation><![CDATA[
	Try{
	 	Set setorController = ##class(s01.Controller.Setor).%New()
	 	Write #!!, "			 Cadastro de procedimento:"
	 	Read !!, "	Digite o Mnemonico: ", mnemonico
	 	Read !!, "	Digite a descrição: ", descricao
		Read !!, "	Digite o preço: ", preco
		If (((preco/1) '= (preco)) || (preco < 0)){
			Write !!
			THROW ##class(%Exception.General).%New("Preço inválido","128",,"O preço precisa ser um número maior que zero!")
		}
	 	Read !!, "	Digite o id do setor: ", idSetor
	 	Set setor = setorController.Consultar(idSetor)
	 	If (setor.Status '= "Ativo"){
			THROW ##class(%Exception.General).%New("ID de setor inválido","256",,"Esse setor está inativo!")
		}
	 	Read !!, "	Digite o status(Ativo ou Inativo): ", status
	 	
	 	Set procedimentoDto = ##class(s01.DTO.Procedimento).%New()
	 	Set procedimentoDto.Descricao = descricao
 		Set procedimentoDto.Mnemonico = mnemonico
 		Set procedimentoDto.Preco = preco
 		Set procedimentoDto.Status = status
		Set procedimentoDto.Setor = idSetor
		
	 	Do ..ProcedimentoController.Cadastrar(procedimentoDto)
 	}
 	Catch erro{
	 	Write #!!, "	Houve um problema ao tentar cadastrar o procedimento!"
		Write !, "	Código do erro: ",erro.Code
		Write !, "	Nome do erro: ",erro.Name
		Write !, "	Informação sobre o erro: ",erro.Data
		Do ##class(s01.View.Principal).ContinuarComEnter()
	 }
]]></Implementation>
</Method>

<Method name="Consultar">
<Implementation><![CDATA[
	Read #!!, "	Digite o Id do procedimento a ser consultado: ", id
	Set procedimentoView = ..ProcedimentoController.Consultar(id)
	If (procedimentoView '= 0){
		Write #
	 	Write !!, "	Dados do procedimento ", id, ":"
		Write !!, "	Mnemônico:	", procedimentoView.Mnemonico
		Write !, "	Descrição:	", procedimentoView.Descricao
		Write !, "	Preço:		R$ ", procedimentoView.Preco
		Write !, "	Setor:		", procedimentoView.Setor.Descricao
		Write !, "	Status:		", procedimentoView.Status
	}
	Else{
		Write #
		Write !, "	'", id, "' não é um id válido!"
		}
	Do ##class(s01.View.Principal).ContinuarComEnter()
]]></Implementation>
</Method>

<Method name="Inativar">
<Implementation><![CDATA[
	Read #!!, "	Digite o Id do procedimento a ser inativado: ", id
	Set procedimentoView  = ..ProcedimentoController.Consultar(id)
	If (procedimentoView '= 0){
		If (procedimentoView.Status = "Ativo"){
			Do ..ProcedimentoController.Inativar(id)
			Write #!!, "	Dados do procedimento ", id, " inativado:", !!
			Write "	Mnemônico:	", procedimentoView.Mnemonico, !
			Write "	Descrição:	", procedimentoView.Descricao, !
			Write "	Preço:		R$ ", procedimentoView.Preco, !
			Write "	Setor:		", procedimentoView.Setor.Descricao, !
		}
		Else{
			Write #
			Write !!, "	O procedimento já está Inativo!!"
		}
	}
	Else{
		Write #
		Write !, "	'", id, "' não é um id válido!"
	}
	Read !!, "	Pressione Enter para voltar ao menu... ", controle
	Kill controle
]]></Implementation>
</Method>

<Method name="ListarTodos">
<Implementation><![CDATA[
	Set listaDeProcedimentos = ##class(%Library.ListOfObjects).%New()
	Set listaDeProcedimentos = ..ProcedimentoController.ListarTodos()
	For i=1:2:listaDeProcedimentos.Count(){
		Write #
		Write !!!, "			 Lista de procedimentos:"
		Write !!!!, "	Dados do procedimento ", i, ":"
		If (..ExistsId(i+1)){
			Write "	Dados do procedimento ", i+1, ":"
		}
		
		Write !!, "	Mnemônico:	", listaDeProcedimentos.GetAt(i).Mnemonico
		If (##class(s01.Persistencia.Procedimento).%ExistsId(i+1)){
			Write "		Mnemônico:	", listaDeProcedimentos.GetAt(i+1).Mnemonico
		}
		
		Write !, "	Descrição:	", listaDeProcedimentos.GetAt(i).Descricao
		If (##class(s01.Persistencia.Procedimento).%ExistsId(i+1)){
			Write "		Descrição:	", listaDeProcedimentos.GetAt(i+1).Descricao
		}
		
		Write !, "	Preço:		R$ ", listaDeProcedimentos.GetAt(i).Preco
		If (##class(s01.Persistencia.Procedimento).%ExistsId(i+1)){
			Write "    	", "Preço:		R$ ", listaDeProcedimentos.GetAt(i+1).Preco
		}
		
		Write !, "	Setor:		", listaDeProcedimentos.GetAt(i).Setor.Descricao
		If (##class(s01.Persistencia.Procedimento).%ExistsId(i+1)){
			Write "		Setor:		", listaDeProcedimentos.GetAt(i+1).Setor.Descricao
		}
		
		Write !, "	Status:		", listaDeProcedimentos.GetAt(i).Status
		If (##class(s01.Persistencia.Procedimento).%ExistsId(i+1)){
			Write "		Status:		", listaDeProcedimentos.GetAt(i+1).Status
		}
		
		Write !!!, "			     Página ", $NORMALIZE((i/2), 0), " de ", $NORMALIZE((listaDeProcedimentos.Count()/2), 0)
		If (i+1<listaDeProcedimentos.Count()){
			Read !!!!!, "	Pressione Enter para ir a próxima página ", controle
			Kill controle
		}
	}
	Read !!!!!, "	Pressione Enter para voltar ao menu... ", controle
	Kill controle
]]></Implementation>
</Method>
</Class>


<Class name="s01.View.Setor">
<Super>%RegisteredObject</Super>
<TimeChanged>65464,55798.183816</TimeChanged>
<TimeCreated>65442,41503.406868</TimeCreated>

<Method name="Menu">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Do{
		Read #!!, "	     ----Setor----",
		!!, "	Selecione uma das opções:", !,
		!, "	1. Cadastrar",
		!, "	2. Consultar",
		!, "	3. Inativar",
		!, "	4. Listar Todos",
		!!, "	0. Sair", !!, "	Digite a opção desejada: ", opcao
		Do ..TratarOpcao(opcao)
	} While(opcao '= 0)
]]></Implementation>
</Method>

<Method name="TratarOpcao">
<ClassMethod>1</ClassMethod>
<FormalSpec>pOpcao:%Integer</FormalSpec>
<Implementation><![CDATA[
	If (pOpcao = 1){
		Do ..Salvar()
	}
	
	ElseIf (pOpcao = 2){
		Do ..Consultar()
	}
	
	ElseIf (pOpcao = 3){
		Do ..Inativar()
	}
	
	ElseIf (pOpcao = 4){
		Do ..ListarTodos()
	}
	ElseIf (pOpcao = 0){
		Write #
	}
]]></Implementation>
</Method>

<Method name="Salvar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Try{
	 	Write #!!, "			 Cadastro de setor:"
	 	Read !!, "	Digite a descrição: ", descricao
		Read !!, "	Digite o status (Ativo ou Inativo): ", status
		Set setorDto = ##class(s01.DTO.Setor).%New()
	 	Set setorDto.Descricao = descricao
	 	Set setorDto.Status = status
		Set setorController = ##class(s01.Controller.Setor).%New()
	 	Do setorController.Salvar(setorDto)
	 	Write !!, "	Setor cadastrado com sucesso!!"
	}
	Catch{
		Write #!!, "	Erro ao cadastrar Setor"
	}
 	Do ##class(s01.View.Principal).ContinuarComEnter()
]]></Implementation>
</Method>

<Method name="Consultar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Read #!!, "	Digite o Id do setor a ser consultado: ", id
	Set setorController = ##class(s01.Controller.Setor).%New()
	Set setorView = setorController.Consultar(id)
	If (setorView '= ""){
		Write #
	 	Write !!, "	Dados do setor ", id, ":"
		Write !, "	Descrição:	", setorView.Descricao
		Write !, "	Status:		", setorView.Status
	}
	Else{
		Write #
		Write !, "	'", id, "' não é um id válido!"
		}
	Do ##class(s01.View.Principal).ContinuarComEnter()
]]></Implementation>
</Method>

<Method name="Inativar">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Read #!!, "	Digite o Id do Setor a ser inativado: ", id
	Set setorController = ##class(s01.Controller.Setor).%New()
	Set setorView  = setorController.Consultar(id)
	If (setorView '= ""){
		If (setorController.Status = "Ativo"){
			Do setorController.Inativar(id)
			Write #!!, "	Dados do setor ", id, " inativado:", !!
			Write "	Descrição:	", setorView.Descricao, !
		}
		Else{
			Write #
			Write !!, "	O setor já está Inativo!!"
		}
	}
	Else{
		Write #
		Write !, "	'", id, "' não é um id válido!"
	}
	Do ##class(s01.View.Principal).ContinuarComEnter()
]]></Implementation>
</Method>

<Method name="ListarTodos">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set listaDeSetores = ##class(%Library.ListOfDataTypes).%New()
	Set setorController = ##class(s01.Controller.Setor).%New()
	Set listaDeSetores = setorController.ListarTodos()
	For i=1:2:listaDeSetores.Count(){
		Write #
		Write !!!, "			 Lista de setores:"
		Write !!!!, "	Dados do setor ", i, ":"
		If (..ExisteSetor(i+1)){
			Write "		Dados do setor ", i+1, ":"
		}
		Write !!!, "	Descrição:	", listaDeSetores.GetAt(i).Descricao
		If (..ExisteSetor(i+1)){
			Write "		Descrição:	", listaDeSetores.GetAt(i+1).Descricao
		}
		Write !, "	Status:		", listaDeSetores.GetAt(i).Status
		If (..ExisteSetor(i+1)){
			Write "		Status:		", listaDeSetores.GetAt(i+1).Status
		}
		Write !!!, "			     Página ", $NORMALIZE((i/2), 0), " de ", $NORMALIZE((listaDeSetores.Count()/2), 0)
		If (i+1<listaDeSetores.Count()){
			Do ##class(s01.View.Principal).ContinuarComEnter()
		}
	}
	Do ##class(s01.View.Principal).ContinuarComEnter()
]]></Implementation>
</Method>

<Method name="ExisteSetor">
<ClassMethod>1</ClassMethod>
<FormalSpec>pId</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Set setorController = ##class(s01.Controller.Setor).%New()
	Return setorController.ExisteSetor(pId)
]]></Implementation>
</Method>
</Class>


</Export>
